name: webapp CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Install zip
        run: sudo apt-get update && sudo apt-get install wget zip unzip -y
      - name: Maven Package
        run: mvn clean package
      - name: Maven Verify
        run: mvn clean verify -DskipTests
  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' && needs.build.result == 'success'
    steps:
      - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          sudo sleep 10

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: create zip of artifacts
        run: |
          mkdir deploy_artifact
          zip -r webapp-${{github.run_number}}.zip . -i ./target/webapp_springboot-0.0.1-SNAPSHOT.jar ./scripts/*.sh appspec.yml
          mv webapp-${{github.run_number}}.zip ./deploy_artifact
      - name: Copy artifacts to S3
        run: |
          aws s3 sync ./deploy_artifact s3://${{secrets.AWS_CODEDEPLOY_BUCKET}}

      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          output=$(aws deploy create-deployment \
            --application-name "csye6225-webapp" \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name "csye6225-webapp-deployment" \
            --description "CSYE6225 - Codedeploy" \
            --s3-location bucket=${{secrets.AWS_CODEDEPLOY_BUCKET}},key=webapp-${{github.run_number}}.zip,bundleType=zip \
            --region us-east-1 \
            --output json)
            echo $output
